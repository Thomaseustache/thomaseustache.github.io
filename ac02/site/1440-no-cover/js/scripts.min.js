$(document).ready(function(){
  slider.controls();
  menu.controls();
});

var menu = {
  // Vars
  hashs: $(".navigation .hash"),
  scrollable: $("body"),
  // Methods
  controls: function(){
    var _this = this;

    this.hashs.click(function(e){
      e.preventDefault();
      _this.hashs.removeClass('active');
      $(this).addClass('active');
      _this.scrollTo($(this).attr('href'));
	  return false;
    });
  },
  // Scroll to a given hash
  scrollTo: function(hash){
    var content = $(hash);
    if(!content.length)
      return false;

    this.scrollable.animate({
      scrollTop: Math.round(content.offset().top)
    }, 300);
  },
  // Check if body or html handle the scroll
  getScrollable: function(){
    var ua = window.navigator.userAgent;
  	var firefox = ua.toLowerCase().indexOf('firefox') > -1;
  	var msie = ua.indexOf("MSIE ") > -1;
  	var isIE11 = !!navigator.userAgent.match(/Trident.*rv[ :]*11\./);
  	if(firefox == true || msie == true || isIE11 == true){
      this.scrollable = $("html");
    }
  }
}

var slider = {
  // Vars
  next: $(".slider-controller .next"),
  previous: $(".slider-controller .previous"),
  target: $(".slider .target"),
  // Methods
  controls: function(){
    var _this = this;

    this.next.click(function(){
      var slider = $(this).closest('.slider');
      _this.change(slider, true);
    });
    this.previous.click(function(){
      var slider = $(this).closest('.slider');
      _this.change(slider, false);
    });
    this.target.click(function(){
      var slider = $(this).closest('.slider');
      _this.change(slider, true, $(this).attr('target'));
    });
  },
  // Change slide to next or previous
  change: function(slider, next, force){
    if(slider.hasClass('processing'))
      return false;

    var _this = this;

    // Block slider controlls
    slider.addClass('processing');

    // Get current and next slide
    var currentSlide = slider.find('.slide.active');
    var nextSlide = next ? currentSlide.next('.slide') : currentSlide.prev('.slide');

    // Check if nextSlide exists (case after last or before first)
    if(!nextSlide.length)
      nextSlide = next ? slider.find('.slide').first() : slider.find('.slide').last();

    // Not enought slides
    if(nextSlide.hasClass('active'))
      return false;

    // Get the hidding direction
    var hideDirection = next ? '-100%' : '100%';

    // Force certain slide
    if(force)
      nextSlide = slider.find('.slide-' + force);

    // Prepare next slide position
    if(next)
      nextSlide.css('left', '100%');
    else
      nextSlide.css('left', '-100%');

    // Animate slides
    currentSlide.animate({
      left: hideDirection
    }, _this.duration);

    nextSlide.animate({
      left: '0%'
    }, _this.duration, function(){
      // Change current slide
	  if( nextSlide.closest('section').attr('id') == "offers"){
		  BGcolor = nextSlide.attr('data-color');
		  $('#offers .wrapper').css({ 'background-color': BGcolor });
		  console.log(BGcolor);
		  if(BGcolor!="#ffffff"){
			$('#offers .wrapper .content').addClass('white');
		  }else{
			$('#offers .wrapper .content').removeClass('white');
		  }
	  }
      nextSlide.addClass('active').removeAttr('style');
      currentSlide.removeClass('active').removeAttr('style');
      slider.removeClass('processing');
    });
  }
};
